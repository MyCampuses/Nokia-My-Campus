// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`News should work 1`] = `
<News>
  <AuthNews>
    <AuthLoading>
      <div
        style={
          Object {
            "alignItems": "center",
            "bottom": 0,
            "display": "flex",
            "height": "100%",
            "justifyContent": "center",
            "left": 0,
            "margin": "auto 0",
            "position": "absolute",
            "right": 0,
            "textAlign": "center",
            "top": 0,
          }
        }
      >
        <WithStyles(ForwardRef(CircularProgress))
          style={Object {}}
        >
          <ForwardRef(CircularProgress)
            classes={
              Object {
                "circle": "MuiCircularProgress-circle",
                "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                "circleStatic": "MuiCircularProgress-circleStatic",
                "colorPrimary": "MuiCircularProgress-colorPrimary",
                "colorSecondary": "MuiCircularProgress-colorSecondary",
                "indeterminate": "MuiCircularProgress-indeterminate",
                "root": "MuiCircularProgress-root",
                "static": "MuiCircularProgress-static",
                "svg": "MuiCircularProgress-svg",
              }
            }
            style={Object {}}
          >
            <div
              className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
              role="progressbar"
              style={
                Object {
                  "height": 40,
                  "width": 40,
                }
              }
            >
              <svg
                className="MuiCircularProgress-svg"
                viewBox="22 22 44 44"
              >
                <circle
                  className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                  cx={44}
                  cy={44}
                  fill="none"
                  r={20.2}
                  strokeWidth={3.6}
                  style={Object {}}
                />
              </svg>
            </div>
          </ForwardRef(CircularProgress)>
        </WithStyles(ForwardRef(CircularProgress))>
      </div>
    </AuthLoading>
  </AuthNews>
</News>
`;

exports[`News testing highlight 1`] = `
<HighlightItem
  highlight={
    Object {
      "description": "Nokia halloween party this saturday at dream cafe! Come join us for some eerie fun",
      "higlight": true,
      "imgTitle": "Halloween Party",
      "imgUrl": "pexels-wilson-vitorino-3230473.jpg",
      "paragraphImg": Object {
        "2": "pexels-wilson-vitorino-3230473.jpg",
        "5": "pexels-wilson-vitorino-3230473.jpg",
      },
      "paragraphs": Object {
        "1": "This is the world we live in",
        "2": "Come join us in death",
        "3": "Hehou hahau",
        "4": "Lorem ipsum dolor sit amet, meis expetenda ei eam, has ne assum aeque adipiscing, no legere utroque qui. Vix et congue invidunt facilisi, audire sententiae ea sea. Nulla accusam elaboraret eos ne. Solet putant epicuri te duo, per no error vivendum contentiones, legere mnesarchum duo ne. At qui sint dignissim, eum oratio veniam an.
  
      Probo ancillae vituperatoribus in mea, his an dico enim bonorum, illum gubergren posidonium ex quo. Sit ea case minimum, mei malorum accusam expetendis ex. Ei has exerci nemore convenire, duo id eirmod nonumes. Eos et animal dolorum epicurei, te eam altera mediocrem, eu sea torquatos reformidans.
      
      Elitr iudicabit eloquentiam cu vim. Graecis mediocritatem his in, ne erant harum soleat cum. In natum propriae mel. Quod impetus.",
        "5": "Lorem ipsum dolor sit amet, meis expetenda ei eam, has ne assum aeque adipiscing, no legere utroque qui. Vix et congue invidunt facilisi, audire sententiae ea sea. Nulla accusam elaboraret eos ne. Solet putant epicuri te duo, per no error vivendum contentiones, legere mnesarchum duo ne. At qui sint dignissim, eum oratio veniam an.
  
      Probo ancillae vituperatoribus in mea, his an dico enim bonorum, illum gubergren posidonium ex quo. Sit ea case minimum, mei malorum accusam expetendis ex. Ei has exerci nemore convenire, duo id eirmod nonumes. Eos et animal dolorum epicurei, te eam altera mediocrem, eu sea torquatos reformidans.
      
      Elitr iudicabit eloquentiam cu vim. Graecis mediocritatem his in, ne erant harum soleat cum. In natum propriae mel. Quod impetus.",
      },
      "timestamp": "October 20, 2020",
      "title": "Halloween party",
    }
  }
>
  <WithStyles(ForwardRef(Paper))
    className="makeStyles-root-3"
    elevation={0}
  >
    <ForwardRef(Paper)
      className="makeStyles-root-3"
      classes={
        Object {
          "elevation0": "MuiPaper-elevation0",
          "elevation1": "MuiPaper-elevation1",
          "elevation10": "MuiPaper-elevation10",
          "elevation11": "MuiPaper-elevation11",
          "elevation12": "MuiPaper-elevation12",
          "elevation13": "MuiPaper-elevation13",
          "elevation14": "MuiPaper-elevation14",
          "elevation15": "MuiPaper-elevation15",
          "elevation16": "MuiPaper-elevation16",
          "elevation17": "MuiPaper-elevation17",
          "elevation18": "MuiPaper-elevation18",
          "elevation19": "MuiPaper-elevation19",
          "elevation2": "MuiPaper-elevation2",
          "elevation20": "MuiPaper-elevation20",
          "elevation21": "MuiPaper-elevation21",
          "elevation22": "MuiPaper-elevation22",
          "elevation23": "MuiPaper-elevation23",
          "elevation24": "MuiPaper-elevation24",
          "elevation3": "MuiPaper-elevation3",
          "elevation4": "MuiPaper-elevation4",
          "elevation5": "MuiPaper-elevation5",
          "elevation6": "MuiPaper-elevation6",
          "elevation7": "MuiPaper-elevation7",
          "elevation8": "MuiPaper-elevation8",
          "elevation9": "MuiPaper-elevation9",
          "outlined": "MuiPaper-outlined",
          "root": "MuiPaper-root",
          "rounded": "MuiPaper-rounded",
        }
      }
      elevation={0}
    >
      <div
        className="MuiPaper-root makeStyles-root-3 MuiPaper-elevation0 MuiPaper-rounded"
      >
        <WithStyles(ForwardRef(CardActionArea))
          onClick={[Function]}
        >
          <ForwardRef(CardActionArea)
            classes={
              Object {
                "focusHighlight": "MuiCardActionArea-focusHighlight",
                "focusVisible": "Mui-focusVisible",
                "root": "MuiCardActionArea-root",
              }
            }
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiCardActionArea-root"
              focusVisibleClassName="Mui-focusVisible"
              onClick={[Function]}
            >
              <ForwardRef(ButtonBase)
                className="MuiCardActionArea-root"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                focusVisibleClassName="Mui-focusVisible"
                onClick={[Function]}
              >
                <button
                  className="MuiButtonBase-root MuiCardActionArea-root"
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type="button"
                >
                  <WithStyles(ForwardRef(CardHeader))
                    className="makeStyles-header-8"
                    title="Halloween party"
                    titleTypographyProps={
                      Object {
                        "variant": "h4",
                      }
                    }
                  >
                    <ForwardRef(CardHeader)
                      className="makeStyles-header-8"
                      classes={
                        Object {
                          "action": "MuiCardHeader-action",
                          "avatar": "MuiCardHeader-avatar",
                          "content": "MuiCardHeader-content",
                          "root": "MuiCardHeader-root",
                          "subheader": "MuiCardHeader-subheader",
                          "title": "MuiCardHeader-title",
                        }
                      }
                      title="Halloween party"
                      titleTypographyProps={
                        Object {
                          "variant": "h4",
                        }
                      }
                    >
                      <div
                        className="MuiCardHeader-root makeStyles-header-8"
                      >
                        <div
                          className="MuiCardHeader-content"
                        >
                          <WithStyles(ForwardRef(Typography))
                            className="MuiCardHeader-title"
                            component="span"
                            display="block"
                            variant="h4"
                          >
                            <ForwardRef(Typography)
                              className="MuiCardHeader-title"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                              display="block"
                              variant="h4"
                            >
                              <span
                                className="MuiTypography-root MuiCardHeader-title MuiTypography-h4 MuiTypography-displayBlock"
                              >
                                Halloween party
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </div>
                      </div>
                    </ForwardRef(CardHeader)>
                  </WithStyles(ForwardRef(CardHeader))>
                  <WithStyles(ForwardRef(CardMedia))
                    className="makeStyles-media-4"
                    image="pexels-wilson-vitorino-3230473.jpg"
                    title="Halloween Party"
                  >
                    <ForwardRef(CardMedia)
                      className="makeStyles-media-4"
                      classes={
                        Object {
                          "img": "MuiCardMedia-img",
                          "media": "MuiCardMedia-media",
                          "root": "MuiCardMedia-root",
                        }
                      }
                      image="pexels-wilson-vitorino-3230473.jpg"
                      title="Halloween Party"
                    >
                      <div
                        className="MuiCardMedia-root makeStyles-media-4"
                        style={
                          Object {
                            "backgroundImage": "url(\\"pexels-wilson-vitorino-3230473.jpg\\")",
                          }
                        }
                        title="Halloween Party"
                      />
                    </ForwardRef(CardMedia)>
                  </WithStyles(ForwardRef(CardMedia))>
                  <WithStyles(ForwardRef(CardContent))>
                    <ForwardRef(CardContent)
                      classes={
                        Object {
                          "root": "MuiCardContent-root",
                        }
                      }
                    >
                      <div
                        className="MuiCardContent-root"
                      >
                        <WithStyles(ForwardRef(Typography))
                          color="textSecondary"
                          component="p"
                          variant="body2"
                        >
                          <ForwardRef(Typography)
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="p"
                            variant="body2"
                          >
                            <p
                              className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextSecondary"
                            >
                              Nokia halloween party this saturday at dream cafe! Come join us for some eerie fun
                            </p>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </div>
                    </ForwardRef(CardContent)>
                  </WithStyles(ForwardRef(CardContent))>
                  <span
                    className="MuiCardActionArea-focusHighlight"
                  />
                  <NoSsr>
                    <WithStyles(memo)
                      center={false}
                    >
                      <ForwardRef(TouchRipple)
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </NoSsr>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(CardActionArea)>
        </WithStyles(ForwardRef(CardActionArea))>
        <WithStyles(ForwardRef(CardActions))
          className="makeStyles-cardactions-9"
          disableSpacing={true}
        >
          <ForwardRef(CardActions)
            className="makeStyles-cardactions-9"
            classes={
              Object {
                "root": "MuiCardActions-root",
                "spacing": "MuiCardActions-spacing",
              }
            }
            disableSpacing={true}
          >
            <div
              className="MuiCardActions-root makeStyles-cardactions-9"
            >
              <WithStyles(ForwardRef(Typography))>
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                >
                  <p
                    className="MuiTypography-root MuiTypography-body1"
                  >
                    October 20, 2020
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <WithStyles(ForwardRef(Chip))
                color="primary"
                label="Highlight"
              >
                <ForwardRef(Chip)
                  classes={
                    Object {
                      "avatar": "MuiChip-avatar",
                      "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                      "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                      "avatarSmall": "MuiChip-avatarSmall",
                      "clickable": "MuiChip-clickable",
                      "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                      "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                      "colorPrimary": "MuiChip-colorPrimary",
                      "colorSecondary": "MuiChip-colorSecondary",
                      "deletable": "MuiChip-deletable",
                      "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                      "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                      "deleteIcon": "MuiChip-deleteIcon",
                      "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                      "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                      "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                      "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                      "deleteIconSmall": "MuiChip-deleteIconSmall",
                      "disabled": "Mui-disabled",
                      "icon": "MuiChip-icon",
                      "iconColorPrimary": "MuiChip-iconColorPrimary",
                      "iconColorSecondary": "MuiChip-iconColorSecondary",
                      "iconSmall": "MuiChip-iconSmall",
                      "label": "MuiChip-label",
                      "labelSmall": "MuiChip-labelSmall",
                      "outlined": "MuiChip-outlined",
                      "outlinedPrimary": "MuiChip-outlinedPrimary",
                      "outlinedSecondary": "MuiChip-outlinedSecondary",
                      "root": "MuiChip-root",
                      "sizeSmall": "MuiChip-sizeSmall",
                    }
                  }
                  color="primary"
                  label="Highlight"
                >
                  <div
                    className="MuiChip-root MuiChip-colorPrimary"
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                  >
                    <span
                      className="MuiChip-label"
                    >
                      Highlight
                    </span>
                  </div>
                </ForwardRef(Chip)>
              </WithStyles(ForwardRef(Chip))>
            </div>
          </ForwardRef(CardActions)>
        </WithStyles(ForwardRef(CardActions))>
      </div>
    </ForwardRef(Paper)>
  </WithStyles(ForwardRef(Paper))>
</HighlightItem>
`;

exports[`News testing highlight snapshot 1`] = `
<HighlightItem
  highlight={
    Object {
      "description": "Nokia halloween party this saturday at dream cafe! Come join us for some eerie fun",
      "higlight": true,
      "imgTitle": "Halloween Party",
      "imgUrl": "pexels-wilson-vitorino-3230473.jpg",
      "paragraphImg": Object {
        "2": "pexels-wilson-vitorino-3230473.jpg",
        "5": "pexels-wilson-vitorino-3230473.jpg",
      },
      "paragraphs": Object {
        "1": "This is the world we live in",
        "2": "Come join us in death",
        "3": "Hehou hahau",
        "4": "Lorem ipsum dolor sit amet, meis expetenda ei eam, has ne assum aeque adipiscing, no legere utroque qui. Vix et congue invidunt facilisi, audire sententiae ea sea. Nulla accusam elaboraret eos ne. Solet putant epicuri te duo, per no error vivendum contentiones, legere mnesarchum duo ne. At qui sint dignissim, eum oratio veniam an.

    Probo ancillae vituperatoribus in mea, his an dico enim bonorum, illum gubergren posidonium ex quo. Sit ea case minimum, mei malorum accusam expetendis ex. Ei has exerci nemore convenire, duo id eirmod nonumes. Eos et animal dolorum epicurei, te eam altera mediocrem, eu sea torquatos reformidans.
    
    Elitr iudicabit eloquentiam cu vim. Graecis mediocritatem his in, ne erant harum soleat cum. In natum propriae mel. Quod impetus.",
        "5": "Lorem ipsum dolor sit amet, meis expetenda ei eam, has ne assum aeque adipiscing, no legere utroque qui. Vix et congue invidunt facilisi, audire sententiae ea sea. Nulla accusam elaboraret eos ne. Solet putant epicuri te duo, per no error vivendum contentiones, legere mnesarchum duo ne. At qui sint dignissim, eum oratio veniam an.

    Probo ancillae vituperatoribus in mea, his an dico enim bonorum, illum gubergren posidonium ex quo. Sit ea case minimum, mei malorum accusam expetendis ex. Ei has exerci nemore convenire, duo id eirmod nonumes. Eos et animal dolorum epicurei, te eam altera mediocrem, eu sea torquatos reformidans.
    
    Elitr iudicabit eloquentiam cu vim. Graecis mediocritatem his in, ne erant harum soleat cum. In natum propriae mel. Quod impetus.",
      },
      "timestamp": "October 20, 2020",
      "title": "Halloween party",
    }
  }
>
  <WithStyles(ForwardRef(Paper))
    className="makeStyles-root-3"
    elevation={0}
  >
    <ForwardRef(Paper)
      className="makeStyles-root-3"
      classes={
        Object {
          "elevation0": "MuiPaper-elevation0",
          "elevation1": "MuiPaper-elevation1",
          "elevation10": "MuiPaper-elevation10",
          "elevation11": "MuiPaper-elevation11",
          "elevation12": "MuiPaper-elevation12",
          "elevation13": "MuiPaper-elevation13",
          "elevation14": "MuiPaper-elevation14",
          "elevation15": "MuiPaper-elevation15",
          "elevation16": "MuiPaper-elevation16",
          "elevation17": "MuiPaper-elevation17",
          "elevation18": "MuiPaper-elevation18",
          "elevation19": "MuiPaper-elevation19",
          "elevation2": "MuiPaper-elevation2",
          "elevation20": "MuiPaper-elevation20",
          "elevation21": "MuiPaper-elevation21",
          "elevation22": "MuiPaper-elevation22",
          "elevation23": "MuiPaper-elevation23",
          "elevation24": "MuiPaper-elevation24",
          "elevation3": "MuiPaper-elevation3",
          "elevation4": "MuiPaper-elevation4",
          "elevation5": "MuiPaper-elevation5",
          "elevation6": "MuiPaper-elevation6",
          "elevation7": "MuiPaper-elevation7",
          "elevation8": "MuiPaper-elevation8",
          "elevation9": "MuiPaper-elevation9",
          "outlined": "MuiPaper-outlined",
          "root": "MuiPaper-root",
          "rounded": "MuiPaper-rounded",
        }
      }
      elevation={0}
    >
      <div
        className="MuiPaper-root makeStyles-root-3 MuiPaper-elevation0 MuiPaper-rounded"
      >
        <WithStyles(ForwardRef(CardActionArea))
          onClick={[Function]}
        >
          <ForwardRef(CardActionArea)
            classes={
              Object {
                "focusHighlight": "MuiCardActionArea-focusHighlight",
                "focusVisible": "Mui-focusVisible",
                "root": "MuiCardActionArea-root",
              }
            }
            onClick={[Function]}
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiCardActionArea-root"
              focusVisibleClassName="Mui-focusVisible"
              onClick={[Function]}
            >
              <ForwardRef(ButtonBase)
                className="MuiCardActionArea-root"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                focusVisibleClassName="Mui-focusVisible"
                onClick={[Function]}
              >
                <button
                  className="MuiButtonBase-root MuiCardActionArea-root"
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type="button"
                >
                  <WithStyles(ForwardRef(CardHeader))
                    className="makeStyles-header-8"
                    title="Halloween party"
                    titleTypographyProps={
                      Object {
                        "variant": "h4",
                      }
                    }
                  >
                    <ForwardRef(CardHeader)
                      className="makeStyles-header-8"
                      classes={
                        Object {
                          "action": "MuiCardHeader-action",
                          "avatar": "MuiCardHeader-avatar",
                          "content": "MuiCardHeader-content",
                          "root": "MuiCardHeader-root",
                          "subheader": "MuiCardHeader-subheader",
                          "title": "MuiCardHeader-title",
                        }
                      }
                      title="Halloween party"
                      titleTypographyProps={
                        Object {
                          "variant": "h4",
                        }
                      }
                    >
                      <div
                        className="MuiCardHeader-root makeStyles-header-8"
                      >
                        <div
                          className="MuiCardHeader-content"
                        >
                          <WithStyles(ForwardRef(Typography))
                            className="MuiCardHeader-title"
                            component="span"
                            display="block"
                            variant="h4"
                          >
                            <ForwardRef(Typography)
                              className="MuiCardHeader-title"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                              display="block"
                              variant="h4"
                            >
                              <span
                                className="MuiTypography-root MuiCardHeader-title MuiTypography-h4 MuiTypography-displayBlock"
                              >
                                Halloween party
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </div>
                      </div>
                    </ForwardRef(CardHeader)>
                  </WithStyles(ForwardRef(CardHeader))>
                  <WithStyles(ForwardRef(CardMedia))
                    className="makeStyles-media-4"
                    image="pexels-wilson-vitorino-3230473.jpg"
                    title="Halloween Party"
                  >
                    <ForwardRef(CardMedia)
                      className="makeStyles-media-4"
                      classes={
                        Object {
                          "img": "MuiCardMedia-img",
                          "media": "MuiCardMedia-media",
                          "root": "MuiCardMedia-root",
                        }
                      }
                      image="pexels-wilson-vitorino-3230473.jpg"
                      title="Halloween Party"
                    >
                      <div
                        className="MuiCardMedia-root makeStyles-media-4"
                        style={
                          Object {
                            "backgroundImage": "url(\\"pexels-wilson-vitorino-3230473.jpg\\")",
                          }
                        }
                        title="Halloween Party"
                      />
                    </ForwardRef(CardMedia)>
                  </WithStyles(ForwardRef(CardMedia))>
                  <WithStyles(ForwardRef(CardContent))>
                    <ForwardRef(CardContent)
                      classes={
                        Object {
                          "root": "MuiCardContent-root",
                        }
                      }
                    >
                      <div
                        className="MuiCardContent-root"
                      >
                        <WithStyles(ForwardRef(Typography))
                          color="textSecondary"
                          component="p"
                          variant="body2"
                        >
                          <ForwardRef(Typography)
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            component="p"
                            variant="body2"
                          >
                            <p
                              className="MuiTypography-root MuiTypography-body2 MuiTypography-colorTextSecondary"
                            >
                              Nokia halloween party this saturday at dream cafe! Come join us for some eerie fun
                            </p>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </div>
                    </ForwardRef(CardContent)>
                  </WithStyles(ForwardRef(CardContent))>
                  <span
                    className="MuiCardActionArea-focusHighlight"
                  />
                  <NoSsr>
                    <WithStyles(memo)
                      center={false}
                    >
                      <ForwardRef(TouchRipple)
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </NoSsr>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(CardActionArea)>
        </WithStyles(ForwardRef(CardActionArea))>
        <WithStyles(ForwardRef(CardActions))
          className="makeStyles-cardactions-9"
          disableSpacing={true}
        >
          <ForwardRef(CardActions)
            className="makeStyles-cardactions-9"
            classes={
              Object {
                "root": "MuiCardActions-root",
                "spacing": "MuiCardActions-spacing",
              }
            }
            disableSpacing={true}
          >
            <div
              className="MuiCardActions-root makeStyles-cardactions-9"
            >
              <WithStyles(ForwardRef(Typography))>
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                >
                  <p
                    className="MuiTypography-root MuiTypography-body1"
                  >
                    October 20, 2020
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <WithStyles(ForwardRef(Chip))
                color="primary"
                label="Highlight"
              >
                <ForwardRef(Chip)
                  classes={
                    Object {
                      "avatar": "MuiChip-avatar",
                      "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                      "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                      "avatarSmall": "MuiChip-avatarSmall",
                      "clickable": "MuiChip-clickable",
                      "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                      "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                      "colorPrimary": "MuiChip-colorPrimary",
                      "colorSecondary": "MuiChip-colorSecondary",
                      "deletable": "MuiChip-deletable",
                      "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                      "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                      "deleteIcon": "MuiChip-deleteIcon",
                      "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                      "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                      "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                      "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                      "deleteIconSmall": "MuiChip-deleteIconSmall",
                      "disabled": "Mui-disabled",
                      "icon": "MuiChip-icon",
                      "iconColorPrimary": "MuiChip-iconColorPrimary",
                      "iconColorSecondary": "MuiChip-iconColorSecondary",
                      "iconSmall": "MuiChip-iconSmall",
                      "label": "MuiChip-label",
                      "labelSmall": "MuiChip-labelSmall",
                      "outlined": "MuiChip-outlined",
                      "outlinedPrimary": "MuiChip-outlinedPrimary",
                      "outlinedSecondary": "MuiChip-outlinedSecondary",
                      "root": "MuiChip-root",
                      "sizeSmall": "MuiChip-sizeSmall",
                    }
                  }
                  color="primary"
                  label="Highlight"
                >
                  <div
                    className="MuiChip-root MuiChip-colorPrimary"
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                  >
                    <span
                      className="MuiChip-label"
                    >
                      Highlight
                    </span>
                  </div>
                </ForwardRef(Chip)>
              </WithStyles(ForwardRef(Chip))>
            </div>
          </ForwardRef(CardActions)>
        </WithStyles(ForwardRef(CardActions))>
      </div>
    </ForwardRef(Paper)>
  </WithStyles(ForwardRef(Paper))>
</HighlightItem>
`;
